<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置缓存管理器 --><!-- 用户授权信息Cache -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <!-- 指定 ehcache 的配置文件 -->
        <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>
    </bean>
    <!-- 配置需要向Cookie中保存数据的配置模版（RememberMe） -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- 设置Cookie在浏览器中保存内容的名字，由用户自己来设置 -->
        <constructor-arg value="MLDNJAVA-RememberMe"/>
        <!-- 保证该系统不会受到跨域的脚本操作供给 -->
        <property name="httpOnly" value="true"/>
        <!-- 定义Cookie的过期时间为一小时 -->
        <property name="maxAge" value="3600"/>
    </bean>
    <!-- 定义RememberMe功能的程序管理类 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- 定义在进行RememberMe功能实现的时候所需要使用到的Cookie的处理类 -->
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 配置进行授权和认证的 Realm --> <!-- 配置自定义Realm域 -->
    <bean id="myRealm" class="QingXiao.filter.MyShiroRealm">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="authorizationCacheName" value="authorizationCache" />
    </bean>

    <!-- 配置 Shiro 的 SecurityManager Bean. 配置安全管理器   -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="cacheManager" ref="cacheManager"/>
        <!-- 必须要注入自定义Realm域，至少提供一个 -->
        <property name="realm" ref="myRealm"/>
        <!-- 定义要使用的session管理器 <property name="sessionManager" ref="sessionManager"/>-->

        <!-- 定义RememberMe的管理器 -->
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <!-- shiro 拦截 <aop:config proxy-target-class="true"></aop:config> -->
    <!-- 启用shrio授权注解拦截方式 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 装配 securityManager -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 配置登陆页面 -->
        <property name="loginUrl" value="/login.jsp"/>
        <!-- 登陆成功后的一面 -->
        <property name="successUrl" value="/index.jsp"/>
        <property name="unauthorizedUrl" value="/login.jsp"/>
        <!-- 具体配置需要拦截哪些 URL, 以及访问对应的 URL 时使用 Shiro 的什么 Filter 进行拦截.  -->
        <property name="filterChainDefinitions">
            <value>
                <!-- 对静态资源设置允许匿名访问 -->
                /images/** = anon
                /js/** = anon
                /css/** = anon
                <!-- 可匿名访问路径，例如：验证码、登录连接、退出连接等 -->
                <!--/Article/articleList1 =authc,perms[user:edit]-->
                /User/login = anon
                /User/LoginWeb1 = anon
                /Article/articleList1 = authc,roles[User1]
                <!-- 剩余其他路径，必须认证通过才可以访问 -->
                /app/index/rose.html = authc,roles[User1]
                /app/index/wEditor.html = authc,roles[User1]
                /** = anon
            </value>
        </property>
    </bean>
    <!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- AOP式方法级权限检查 --><!-- 开启Shiro注解 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>


</beans>